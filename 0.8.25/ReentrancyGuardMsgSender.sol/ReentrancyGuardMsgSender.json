{"abi":[{"type":"error","name":"InvalidMsgSender","inputs":[{"name":"storedSender","type":"address","internalType":"address"},{"name":"actualSender","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storedSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualSender\",\"type\":\"address\"}],\"name\":\"InvalidMsgSender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"ReentrancyGuardMsgSender stores the original, nonreentrant msg.sender in transient storage. Allows the original sender      and the contract itself to reenter the contract, but prevents all other callers from reentering.\",\"errors\":{\"InvalidMsgSender(address,address)\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"ReentrancyGuardMsgSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modified version of OpenZeppelin's ReentrancyGuardTransient         https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuardTransient.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v1/ReentrancyGuardMsgSender.sol\":\"ReentrancyGuardMsgSender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0x-settler/=lib/0x-settler/\",\":@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":Multicaller/=lib/Multicaller/src/\",\":ds-test/=lib/seaport-1.5/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":multicaller/=lib/Multicaller/\",\":murky/=lib/seaport-1.5/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2-relay/=lib/permit2-relay/\",\":permit2/=lib/0x-settler/lib/permit2/\",\":seaport-1.5/=lib/seaport-1.5/\",\":seaport-core/=lib/seaport-core/src/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-core/lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport-1.5/lib/solarray/src/\",\":solmate/=lib/solmate/\",\":trustlessPermit/=lib/trustlessPermit/\",\":tstorish/=lib/tstorish/\",\":v2-core/=lib/v2-core/\",\":v2-periphery/=lib/v2-periphery/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/v1/ReentrancyGuardMsgSender.sol\":{\"keccak256\":\"0xbaf92836da21789d46b00bc44a6d6125240391c4810e9635ebb42d802257cdb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49c65c9d01e1c231089fb8336f8b255d392330594f4f4f328a54c4e5097b0843\",\"dweb:/ipfs/QmdocERsQqxfTCe3AYR3KX43r8vHt2nE5coYs5C9CL17Tk\"]},\"src/v1/TransientSlot.sol\":{\"keccak256\":\"0x9303ef5a2beb555e52ce56598de205ce07ca8988fc67d073687c06cb8fc973d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b2e48fb42844c25e6cb38e7cfa1d91dcdc054613fd10f608833dbc677acf889\",\"dweb:/ipfs/QmT4HQxbgpWA3fZnK4dY3eXHNCoyBvpvzNq5k7eSt5mR5t\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"storedSender","type":"address"},{"internalType":"address","name":"actualSender","type":"address"}],"type":"error","name":"InvalidMsgSender"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["0x-settler/=lib/0x-settler/","@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","Multicaller/=lib/Multicaller/src/","ds-test/=lib/seaport-1.5/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","multicaller/=lib/Multicaller/","murky/=lib/seaport-1.5/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2-relay/=lib/permit2-relay/","permit2/=lib/0x-settler/lib/permit2/","seaport-1.5/=lib/seaport-1.5/","seaport-core/=lib/seaport-core/src/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-core/lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/solady/","solarray/=lib/seaport-1.5/lib/solarray/src/","solmate/=lib/solmate/","trustlessPermit/=lib/trustlessPermit/","tstorish/=lib/tstorish/","v2-core/=lib/v2-core/","v2-periphery/=lib/v2-periphery/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/v1/ReentrancyGuardMsgSender.sol":"ReentrancyGuardMsgSender"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/v1/ReentrancyGuardMsgSender.sol":{"keccak256":"0xbaf92836da21789d46b00bc44a6d6125240391c4810e9635ebb42d802257cdb4","urls":["bzz-raw://49c65c9d01e1c231089fb8336f8b255d392330594f4f4f328a54c4e5097b0843","dweb:/ipfs/QmdocERsQqxfTCe3AYR3KX43r8vHt2nE5coYs5C9CL17Tk"],"license":"MIT"},"src/v1/TransientSlot.sol":{"keccak256":"0x9303ef5a2beb555e52ce56598de205ce07ca8988fc67d073687c06cb8fc973d1","urls":["bzz-raw://8b2e48fb42844c25e6cb38e7cfa1d91dcdc054613fd10f608833dbc677acf889","dweb:/ipfs/QmT4HQxbgpWA3fZnK4dY3eXHNCoyBvpvzNq5k7eSt5mR5t"],"license":"MIT"}},"version":1},"id":60}