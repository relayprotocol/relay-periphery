{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"invalidateUnorderedNonces","inputs":[{"name":"wordPos","type":"uint256","internalType":"uint256"},{"name":"mask","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"nonceBitmap","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permitTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitTransferFrom","components":[{"name":"permitted","type":"tuple","internalType":"struct ISignatureTransfer.TokenPermissions","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple","internalType":"struct ISignatureTransfer.SignatureTransferDetails","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","components":[{"name":"permitted","type":"tuple[]","internalType":"struct ISignatureTransfer.TokenPermissions[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple[]","internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitWitnessTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitTransferFrom","components":[{"name":"permitted","type":"tuple","internalType":"struct ISignatureTransfer.TokenPermissions","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple","internalType":"struct ISignatureTransfer.SignatureTransferDetails","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"witness","type":"bytes32","internalType":"bytes32"},{"name":"witnessTypeString","type":"string","internalType":"string"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitWitnessTransferFrom","inputs":[{"name":"permit","type":"tuple","internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","components":[{"name":"permitted","type":"tuple[]","internalType":"struct ISignatureTransfer.TokenPermissions[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]},{"name":"transferDetails","type":"tuple[]","internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","components":[{"name":"to","type":"address","internalType":"address"},{"name":"requestedAmount","type":"uint256","internalType":"uint256"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"witness","type":"bytes32","internalType":"bytes32"},{"name":"witnessTypeString","type":"string","internalType":"string"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"UnorderedNonceInvalidation","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"word","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"mask","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidAmount","inputs":[{"name":"maxAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidContractSignature","inputs":[]},{"type":"error","name":"InvalidNonce","inputs":[]},{"type":"error","name":"InvalidSignature","inputs":[]},{"type":"error","name":"InvalidSignatureLength","inputs":[]},{"type":"error","name":"InvalidSigner","inputs":[]},{"type":"error","name":"LengthMismatch","inputs":[]},{"type":"error","name":"SignatureExpired","inputs":[{"name":"signatureDeadline","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x60c03460b7574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b0384111760a35782604052519020608052610f7290816100bc82396080518161096a015260a051816109440152f35b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe604060808152600480361015610013575f80fd5b5f3560e01c8063137c29fe1461052157806330f28b7a146104635780633644e515146104405780633ff9dcb1146103e05780634fe02b441461039e578063edd9444b146102795763fe8ec1a714610068575f80fd5b346102755760c0366003190112610275576001600160401b038135818111610275576100979036908401610823565b602435828111610275576100ae9036908501610911565b6100b661075e565b91608435858111610275576100ce90369088016107df565b60a496919635918211610275576101b06100ee608b998b943691016107df565b9990986a0d88191958591b1a5b994b60aa1b6080865161010d816106d6565b606b81527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c6164647260208201987f5065726d697442617463685769746e6573735472616e7366657246726f6d28548a528201527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608201520152838c51948592606b6020850198895e8484015f81523781015f8382015203606b810184520182610727565b519020845151976101c089610a97565b985f5b81811061024c57505061024161024a99825190816101e5602082018093610af1565b03916101f9601f1993848101835282610727565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c084015260e0908101835282610727565b51902093610b2d565b005b808b61026e826102686102626001968e51610ac9565b51610c16565b92610ac9565b52016101c3565b5f80fd5b5034610275576080366003190112610275576001600160401b038135818111610275576102a99036908401610823565b602435828111610275576102c09036908501610911565b9390926102cb61075e565b91606435918211610275576102e2913691016107df565b949093835151966102f288610a97565b975f5b81811061037c57505061024a97815161032481610316602082018095610af1565b03601f198101835282610727565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102418161070c565b8061038d6102626001938a51610ac9565b610397828d610ac9565b52016102f5565b5034610275578160031936011261027557356001600160a01b0381169190829003610275576020915f525f8252805f206024355f528252805f20549051908152f35b50346102755781600319360112610275577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d903591602435335f525f602052815f20845f52602052815f20818154179055815193845260208401523392a2005b8234610275575f3660031901126102755760209061045c610941565b9051908152f35b509034610275576101003660031901126102755761048036610774565b908060831936011261027557610494610748565b9160e4356001600160401b0381116102755761024a946104b6913691016107df565b9390926104c38351610c16565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a081526105188161070c565b519020916109fc565b509034610275576101403660031901126102755761053e36610774565b908060831936011261027557610552610748565b6001600160401b039290610104358481116102755761057490369087016107df565b939094610124359081116102755761024a96610592913691016107df565b95909461065460848451936105a6856106d6565b60648552631a5b994b60e21b608060208701967f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5088527f65726d697373696f6e73207065726d69747465642c6164647265737320737065898201527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060820152015283865194859260646020850198895e8484015f81523781015f83820152036064810184520182610727565b519020906105186106658551610c16565b6020868101518488015194519182019586526040820192909252336060820152608081019190915260a081019290925260e43560c08301528160e08101610316565b606081019081106001600160401b038211176106c257604052565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176106c257604052565b608081019081106001600160401b038211176106c257604052565b60c081019081106001600160401b038211176106c257604052565b90601f801991011681019081106001600160401b038211176106c257604052565b60c435906001600160a01b038216820361027557565b604435906001600160a01b038216820361027557565b60031901906080821261027557604080519061078f826106a7565b808294126102755780518181018181106001600160401b038211176106c25782526004356001600160a01b0381168103610275578152602435602082015282526044356020830152606435910152565b9181601f84011215610275578235916001600160401b038311610275576020838186019501011161027557565b6001600160401b0381116106c25760051b60200190565b91909160608184031261027557604080519161083e836106a7565b82948135906001600160401b039182811161027557830181601f8201121561027557803560209361086e8261080c565b9361087b88519586610727565b828552858086019360061b85010193818511610275579086899897969594939201925b8484106108bb575050505050855280820135908501520135910152565b90919293949596978483031261027557885190898201828110858211176106c2578a528435906001600160a01b0382168203610275578289928c945282870135838201528152019301919088979695949361089e565b9181601f84011215610275578235916001600160401b038311610275576020808501948460061b01011161027557565b467f00000000000000000000000000000000000000000000000000000000000000000361098c577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a6040820152466060820152306080820152608081526109f6816106d6565b51902090565b9192909360a435936040840151804211610a7f5750602084510151808611610a675750918591610a3c610a4294610a37602088015186610c65565b610cae565b91610cf5565b51516001600160a01b0390811692608435918216820361027557610a6593610ec2565b565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b90610aa18261080c565b610aae6040519182610727565b8281528092610abf601f199161080c565b0190602036910137565b8051821015610add5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b80516020809201915f5b828110610b09575050505090565b835185529381019392810192600101610afb565b9190811015610add5760061b0190565b959190939295805151956040936040830151804211610a7f5750838803610c0157610b68918991610a3c602098610a37602088015186610c65565b5f5b868110610b7b575050505050505050565b610b86818351610ac9565b519085610b9482868a610b1d565b013586830151808211610bea575080610bb3575b506001915001610b6a565b91516001600160a01b039290831690610bcd83878b610b1d565b359384168403610275576001938b610be493610ec2565b5f610ba8565b602490875190633728b83d60e01b82526004820152fd5b6040516001621398b960e31b03198152600490fd5b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845260018060a01b03815116604084015201516060820152606081526109f6816106f1565b90600160ff82161b9160018060a01b03165f525f60205260405f209060081c5f5260205260405f20818154188091551615610c9c57565b604051633ab3447f60e11b8152600490fd5b610cb6610941565b9060405190602082019261190160f01b845260228301526042820152604281526109f6816106f1565b9190826040910312610275576020823592013590565b833b610dfb5760418203610d9857610d0f82820182610cdf565b93909260401015610add576020935f9360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15610d8d575f516001600160a01b03908116918215610d7b571603610d6957565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d5f823e3d90fd5b60408203610de957610dac91810190610cdf565b6001600160ff1b0381169260ff91821c601b01918211610dd5576020935f9360ff608094610d2c565b634e487b7160e01b5f52601160045260245ffd5b604051634be6321b60e01b8152600490fd5b908092936020926064604051809681958294630b135d3f60e11b9a8b8552600485015260406024850152816044850152848401375f828201840152601f01601f191681010301916001600160a01b03165afa908115610d8d575f91610e7f575b506001600160e01b03191603610e6d57565b604051632c19a72f60e21b8152600490fd5b90506020813d602011610eba575b81610e9a60209383610727565b8101031261027557516001600160e01b031981168103610275575f610e5b565b3d9150610e8d565b905f6064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160015f511416171615610f0057565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea2646970667358221220548770caabcd18a71f48d0e13fc1a9c10b6e64cc0c743c91e8e1a6a1b37d325464736f6c63430008190033","sourceMap":"504:6056:37:-:0;;;;919:13:34;900:32;;1632:60;;;789:80;504:6056:37;;717:20:34;504:6056:37;;;;919:13:34;504:6056:37;;;;1686:4:34;504:6056:37;;;;;1632:60:34;;900:32;504:6056:37;;;;;;;;;;;;;;;;;;;;1622:71:34;;504:6056:37;942:74:34;504:6056:37;;;;;;;;;;;;900:32:34;504:6056:37;;;;;;;;;;-1:-1:-1;504:6056:37;;;;;-1:-1:-1;504:6056:37;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x604060808152600480361015610013575f80fd5b5f3560e01c8063137c29fe1461052157806330f28b7a146104635780633644e515146104405780633ff9dcb1146103e05780634fe02b441461039e578063edd9444b146102795763fe8ec1a714610068575f80fd5b346102755760c0366003190112610275576001600160401b038135818111610275576100979036908401610823565b602435828111610275576100ae9036908501610911565b6100b661075e565b91608435858111610275576100ce90369088016107df565b60a496919635918211610275576101b06100ee608b998b943691016107df565b9990986a0d88191958591b1a5b994b60aa1b6080865161010d816106d6565b606b81527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c6164647260208201987f5065726d697442617463685769746e6573735472616e7366657246726f6d28548a528201527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608201520152838c51948592606b6020850198895e8484015f81523781015f8382015203606b810184520182610727565b519020845151976101c089610a97565b985f5b81811061024c57505061024161024a99825190816101e5602082018093610af1565b03916101f9601f1993848101835282610727565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c084015260e0908101835282610727565b51902093610b2d565b005b808b61026e826102686102626001968e51610ac9565b51610c16565b92610ac9565b52016101c3565b5f80fd5b5034610275576080366003190112610275576001600160401b038135818111610275576102a99036908401610823565b602435828111610275576102c09036908501610911565b9390926102cb61075e565b91606435918211610275576102e2913691016107df565b949093835151966102f288610a97565b975f5b81811061037c57505061024a97815161032481610316602082018095610af1565b03601f198101835282610727565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102418161070c565b8061038d6102626001938a51610ac9565b610397828d610ac9565b52016102f5565b5034610275578160031936011261027557356001600160a01b0381169190829003610275576020915f525f8252805f206024355f528252805f20549051908152f35b50346102755781600319360112610275577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d903591602435335f525f602052815f20845f52602052815f20818154179055815193845260208401523392a2005b8234610275575f3660031901126102755760209061045c610941565b9051908152f35b509034610275576101003660031901126102755761048036610774565b908060831936011261027557610494610748565b9160e4356001600160401b0381116102755761024a946104b6913691016107df565b9390926104c38351610c16565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a081526105188161070c565b519020916109fc565b509034610275576101403660031901126102755761053e36610774565b908060831936011261027557610552610748565b6001600160401b039290610104358481116102755761057490369087016107df565b939094610124359081116102755761024a96610592913691016107df565b95909461065460848451936105a6856106d6565b60648552631a5b994b60e21b608060208701967f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5088527f65726d697373696f6e73207065726d69747465642c6164647265737320737065898201527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060820152015283865194859260646020850198895e8484015f81523781015f83820152036064810184520182610727565b519020906105186106658551610c16565b6020868101518488015194519182019586526040820192909252336060820152608081019190915260a081019290925260e43560c08301528160e08101610316565b606081019081106001600160401b038211176106c257604052565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b038211176106c257604052565b608081019081106001600160401b038211176106c257604052565b60c081019081106001600160401b038211176106c257604052565b90601f801991011681019081106001600160401b038211176106c257604052565b60c435906001600160a01b038216820361027557565b604435906001600160a01b038216820361027557565b60031901906080821261027557604080519061078f826106a7565b808294126102755780518181018181106001600160401b038211176106c25782526004356001600160a01b0381168103610275578152602435602082015282526044356020830152606435910152565b9181601f84011215610275578235916001600160401b038311610275576020838186019501011161027557565b6001600160401b0381116106c25760051b60200190565b91909160608184031261027557604080519161083e836106a7565b82948135906001600160401b039182811161027557830181601f8201121561027557803560209361086e8261080c565b9361087b88519586610727565b828552858086019360061b85010193818511610275579086899897969594939201925b8484106108bb575050505050855280820135908501520135910152565b90919293949596978483031261027557885190898201828110858211176106c2578a528435906001600160a01b0382168203610275578289928c945282870135838201528152019301919088979695949361089e565b9181601f84011215610275578235916001600160401b038311610275576020808501948460061b01011161027557565b467f00000000000000000000000000000000000000000000000000000000000000000361098c577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a6040820152466060820152306080820152608081526109f6816106d6565b51902090565b9192909360a435936040840151804211610a7f5750602084510151808611610a675750918591610a3c610a4294610a37602088015186610c65565b610cae565b91610cf5565b51516001600160a01b0390811692608435918216820361027557610a6593610ec2565b565b60249060405190633728b83d60e01b82526004820152fd5b6024906040519063cd21db4f60e01b82526004820152fd5b90610aa18261080c565b610aae6040519182610727565b8281528092610abf601f199161080c565b0190602036910137565b8051821015610add5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b80516020809201915f5b828110610b09575050505090565b835185529381019392810192600101610afb565b9190811015610add5760061b0190565b959190939295805151956040936040830151804211610a7f5750838803610c0157610b68918991610a3c602098610a37602088015186610c65565b5f5b868110610b7b575050505050505050565b610b86818351610ac9565b519085610b9482868a610b1d565b013586830151808211610bea575080610bb3575b506001915001610b6a565b91516001600160a01b039290831690610bcd83878b610b1d565b359384168403610275576001938b610be493610ec2565b5f610ba8565b602490875190633728b83d60e01b82526004820152fd5b6040516001621398b960e31b03198152600490fd5b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845260018060a01b03815116604084015201516060820152606081526109f6816106f1565b90600160ff82161b9160018060a01b03165f525f60205260405f209060081c5f5260205260405f20818154188091551615610c9c57565b604051633ab3447f60e11b8152600490fd5b610cb6610941565b9060405190602082019261190160f01b845260228301526042820152604281526109f6816106f1565b9190826040910312610275576020823592013590565b833b610dfb5760418203610d9857610d0f82820182610cdf565b93909260401015610add576020935f9360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa15610d8d575f516001600160a01b03908116918215610d7b571603610d6957565b604051632057875960e21b8152600490fd5b604051638baa579f60e01b8152600490fd5b6040513d5f823e3d90fd5b60408203610de957610dac91810190610cdf565b6001600160ff1b0381169260ff91821c601b01918211610dd5576020935f9360ff608094610d2c565b634e487b7160e01b5f52601160045260245ffd5b604051634be6321b60e01b8152600490fd5b908092936020926064604051809681958294630b135d3f60e11b9a8b8552600485015260406024850152816044850152848401375f828201840152601f01601f191681010301916001600160a01b03165afa908115610d8d575f91610e7f575b506001600160e01b03191603610e6d57565b604051632c19a72f60e21b8152600490fd5b90506020813d602011610eba575b81610e9a60209383610727565b8101031261027557516001600160e01b031981168103610275575f610e5b565b3d9150610e8d565b905f6064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af13d15601f3d1160015f511416171615610f0057565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fdfea2646970667358221220548770caabcd18a71f48d0e13fc1a9c10b6e64cc0c743c91e8e1a6a1b37d325464736f6c63430008190033","sourceMap":"504:6056:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6056:37;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;4678:86:44;504:6056:37;1621:102:44;504:6056:37;;;;;;;:::i;:::-;;;;-1:-1:-1;;;504:6056:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4678:86:44;;;504:6056:37;;4678:86:44;;1621:102;;;;;;504:6056:37;1621:102:44;;;;;504:6056:37;1621:102:44;;;;4678:86;504:6056:37;4678:86:44;;;;;;;:::i;:::-;1621:102;4668:97;;4799:16;;1621:102;4873:27;;;;:::i;:::-;4916:13;504:6056:37;4931:16:44;;;;;;504:6056:37;;5088:234:44;3596:9:37;504:6056;;;5152:39:44;;1254:173;504:6056:37;5152:39:44;;1254:173;;;:::i;:::-;5152:39;4133:80;5152:39;4133:80;;5152:39;;;;;;;;:::i;:::-;1621:102;5142:50;;504:6056:37;5238:12:44;;;1621:102;5268:15;;;1621:102;504:6056:37;;5088:234:44;;;504:6056:37;;;1621:102:44;;;504:6056:37;;;;5210:10:44;1621:102;;;;;;;504:6056:37;;;;1621:102:44;;;504:6056:37;;;;;;1621:102:44;;;504:6056:37;1621:102:44;5088:234;;;;;504:6056:37;5088:234:44;:::i;:::-;1621:102;5065:267;;3596:9:37;;:::i;:::-;504:6056;4949:3:44;5017:16;;4968:69;5017:16;4995:42;5017:19;504:6056:37;5017:16:44;;;:19;:::i;:::-;;4995:42;:::i;:::-;4968:69;;:::i;:::-;504:6056:37;;4916:13:44;;504:6056:37;;;;;;;;;;;-1:-1:-1;;504:6056:37;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3353:16:44;;;;;1621:102;3427:27;;;;:::i;:::-;3470:13;504:6056:37;3485:16:44;;;;;;504:6056:37;;3124:9;504:6056;;;3734:39:44;;1254:173;504:6056:37;3734:39:44;;1254:173;;;:::i;:::-;3734:39;4133:80;;3734:39;;;;;;:::i;:::-;1621:102;3724:50;;504:6056:37;3820:12:44;;1621:102;3850:15;;;1621:102;504:6056:37;;;3642:237:44;504:6056:37;3642:237:44;;504:6056:37;1254:173:44;504:6056:37;;1018:166:44;;504:6056:37;3792:10:44;1018:166;;;1621:102;504:6056:37;1018:166:44;;504:6056:37;1018:166:44;;;504:6056:37;1018:166:44;3642:237;;;;;:::i;3503:3::-;3571:16;3549:42;3571:19;504:6056:37;3571:16:44;;;:19;:::i;3549:42::-;3522:69;;;;:::i;:::-;504:6056:37;;3470:13:44;;504:6056:37;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5332:53;504:6056;;;;;5288:10;504:6056;;;;;;;;;;;;;;;;;;;5276:40;504:6056;;;;;;;;;;;5288:10;5332:53;;504:6056;;;;;;;;-1:-1:-1;;504:6056:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;504:6056:37;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;504:6056:37;;;;1172:9;504:6056;;;;;;;:::i;:::-;3029:16:44;;;3007:39;3029:16;;3007:39;:::i;:::-;3163:12;;;1621:102;3177:15;;;1621:102;504:6056:37;;;3086:107:44;3163:12;3086:107;;504:6056:37;1018:166:44;504:6056:37;;1018:166:44;;504:6056:37;3151:10:44;1018:166;;;1621:102;1018:166;;;504:6056:37;1018:166:44;;;504:6056:37;1018:166:44;3086:107;;;;;:::i;:::-;1621:102;3063:140;;1172:9:37;;:::i;504:6056::-;;;;;;;;-1:-1:-1;;504:6056:37;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;1637:9;504:6056;;;;;;;:::i;:::-;;;;4133:80:44;1621:102;504:6056:37;;;;;;:::i;:::-;;;;-1:-1:-1;;;504:6056:37;;;;;;;;;;;;;;;;;;;;;;;4133:80:44;;;504:6056:37;;4133:80:44;;1621:102;;;;;;504:6056:37;1621:102:44;;;;;504:6056:37;1621:102:44;;;;4133:80;504:6056:37;4133:80:44;;;;;;;:::i;:::-;1621:102;4123:91;;4278:16;4322:94;4256:39;4278:16;;4256:39;:::i;:::-;504:6056:37;4377:12:44;;;1621:102;4391:15;;;1621:102;504:6056:37;;4322:94:44;;;504:6056:37;;;1621:102:44;;;504:6056:37;;;;4365:10:44;1621:102;;;;;;;504:6056:37;;;;1621:102:44;;;504:6056:37;;;;;;1621:102:44;;;504:6056:37;;1621:102:44;;;4322:94;1621:102;504:6056:37;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;:::o;:::-;895:59:44;504:6056:37;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;:::o;:::-;1018:166:44;504:6056:37;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;:::o;:::-;;;4133:80:44;;504:6056:37;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;504:6056:37;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;504:6056:37;;;;;;:::o;:::-;-1:-1:-1;;504:6056:37;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;504:6056:37;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;;;;;:::o;1186:225:34:-;1270:13;1287:16;1270:33;1287:16;;1318:24;1186:225;:::o;1270:134::-;504:6056:37;;1632:60:34;;;504:6056:37;789:80:34;504:6056:37;;717:20:34;504:6056:37;;;;1270:13:34;504:6056:37;;;;1686:4:34;504:6056:37;;;1621:102:44;504:6056:37;1632:60:34;;;;;:::i;:::-;1621:102:44;1622:71:34;;1186:225;:::o;2090:704:37:-;;;;;2353:31;504:6056;2417:15;;;;1621:102:44;2399:15:37;;:33;2395:79;;2506:16;2353:31;2506:16;;:23;1621:102:44;2488:41:37;;;2484:92;;2613:12;;;;2654:24;2680:5;2613:12;;2353:31;2613:12;;1621:102:44;2613:12:37;;:::i;:::-;2654:24;:::i;:::-;2680:5;;:::i;:::-;2703:16;504:6056;-1:-1:-1;;;;;504:6056:37;;;;;;;;;;;;;2771:15;;;:::i;:::-;2090:704::o;2484:92::-;504:6056;;2417:15;504:6056;2538:38;;;;;;;;;504:6056;2538:38;2395:79;504:6056;;2417:15;504:6056;2441:33;;;;;;;;;504:6056;2441:33;504:6056;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;4133:80:44;504:6056:37;4133:80:44;;504:6056:37;;:::i;:::-;;;;;;;;:::o;:::-;1621:102:44;;504:6056:37;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1254:173:44;1621:102;;;;;;1254:173;;;;;;;;;;;;;:::o;:::-;;;504:6056:37;;1254:173:44;;;;;;;;;;;;504:6056:37;;;;;;;;;;;;:::o;3952:1194::-;;;;;;;4219:16;;1621:102:44;4275:15:37;;;;;;1621:102:44;4257:15:37;;:33;4253:79;;4346:38;;;;4342:67;;4512:5;4446:12;;;4486:24;4446:12;;;;;;1621:102:44;4446:12:37;;:::i;4512:5::-;-1:-1:-1;4573:16:37;;;;;;3952:1194;;;;;;;;:::o;4591:3::-;4650:19;:16;;;:19;:::i;:::-;;4713:18;;;;;;;:::i;:::-;:34;504:6056;4788:16;;;1621:102:44;4770:34:37;;;4766:78;;4867:20;;4863:253;;4591:3;;504:6056;4591:3;;504:6056;4558:13;;4863:253;504:6056;;-1:-1:-1;;;;;504:6056:37;;;;;5058:18;;;;;:::i;:::-;504:6056;;;;;;;;;5081:15;;;;;:::i;:::-;4863:253;;;4766:78;504:6056;;;;2538:38;;;;4813:31;;;;;504:6056;4813:31;4342:67;4275:15;504:6056;-1:-1:-1;;;;;;4393:16:37;;;;;5539:229:44;504:6056:37;;5710:50:44;;;;504:6056:37;895:59:44;504:6056:37;;;;;;;895:59:44;;504:6056:37;;895:59:44;;1621:102;895:59;;;;;504:6056:37;895:59:44;5710:50;;;;;:::i;6265:293:37:-;;6423:1;625:68:45;;;504:6056:37;;;;;;;;-1:-1:-1;504:6056:37;-1:-1:-1;504:6056:37;;;-1:-1:-1;504:6056:37;;6007:1;504:6056;-1:-1:-1;504:6056:37;;;;-1:-1:-1;504:6056:37;;;;6462:33;504:6056;;;6510:13;:18;6506:45;;6265:293::o;6506:45::-;504:6056;;-1:-1:-1;;;6537:14:37;;;;;1757:167:34;1887:18;;:::i;:::-;504:6056:37;;;1858:58:34;;;;504:6056:37;;;;;;;;;;;;;;;1858:58:34;;;;;:::i;504:6056:37:-;;;;;;;;;;;;;;;;;:::o;700:1109:45:-;863:25;;;;933:2;913:22;;933:2;;964:41;;;;;;:::i;:::-;955:50;;625:68;1043:2;625:68;;;;;;-1:-1:-1;625:68:45;;1043:2;625:68;;;1033:13;625:68;;909:490;504:6056:37;;;;;625:68:45;;;;;504:6056:37;625:68:45;;504:6056:37;625:68:45;;;504:6056:37;1429:24:45;;;;;;;;;-1:-1:-1;1429:24:45;-1:-1:-1;;;;;504:6056:37;;;;1471:20:45;;1467:51;;504:6056:37;1536:23:45;1532:51;;700:1109::o;1532:51::-;504:6056:37;;-1:-1:-1;;;1568:15:45;;;;;1467:51;504:6056:37;;-1:-1:-1;;;1500:18:45;;;;;1429:24;504:6056:37;;;-1:-1:-1;504:6056:37;;;;;909:490:45;1092:2;1072:22;;1092:2;;1180:41;;;;;;:::i;:::-;-1:-1:-1;;;;;1243:19:45;;;626:66;504:6056:37;;;1312:2:45;625:68;;;;;;;1280:34;-1:-1:-1;1280:34:45;625:68;;1280:34;909:490;;625:68;504:6056:37;;;-1:-1:-1;625:68:45;;;;;-1:-1:-1;625:68:45;1068:331;1092:2;504:6056:37;-1:-1:-1;;;1360:24:45;;;;;859:944;504:6056:37;;;;1634:57:45;504:6056:37;;;;;;;;;;;;;1634:57:45;;;;;;;504:6056:37;;;;;;;;;;;;;;1621:102:44;-1:-1:-1;1621:102:44;;;;;;504:6056:37;;-1:-1:-1;;504:6056:37;;;1634:57:45;;;-1:-1:-1;;;;;504:6056:37;1634:57:45;;;;;;;-1:-1:-1;1634:57:45;;;859:944;-1:-1:-1;;;;;;;504:6056:37;1709:48:45;1705:87;;700:1109::o;1705:87::-;504:6056:37;;-1:-1:-1;;;1766:26:45;;1634:57;;1766:26;1634:57;;;;;;;;;;;;;;;;;:::i;:::-;;;504:6056:37;;;;;-1:-1:-1;;;;;;504:6056:37;;;;;;1634:57:45;;;;;;-1:-1:-1;1634:57:45;;1328:1616:32;;-1:-1:-1;1532:1355:32;1328:1616;1532:1355;1328:1616;;;1532:1355;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:1355:32;;;;;504:6056:37;;;1328:1616:32:o;504:6056:37:-;1532:1355:32;504:6056:37;-1:-1:-1;;;504:6056:37;;1532:1355:32;;504:6056:37;;;;1532:1355:32;504:6056:37;;;-1:-1:-1;;;1532:1355:32;504:6056:37;;;1532:1355:32;;504:6056:37","linkReferences":{},"immutableReferences":{"40962":[{"start":2410,"length":32}],"40964":[{"start":2372,"length":32}]}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","invalidateUnorderedNonces(uint256,uint256)":"3ff9dcb1","nonceBitmap(address,uint256)":"4fe02b44","permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":"30f28b7a","permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":"edd9444b","permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":"137c29fe","permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":"fe8ec1a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"stateVariables\":{\"nonceBitmap\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/permit2-relay/src/SignatureTransfer.sol\":\"SignatureTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0x-settler/=lib/0x-settler/\",\":@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":Multicaller/=lib/Multicaller/src/\",\":ds-test/=lib/seaport-1.5/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":multicaller/=lib/Multicaller/\",\":murky/=lib/seaport-1.5/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2-relay/=lib/permit2-relay/\",\":permit2/=lib/0x-settler/lib/permit2/\",\":seaport-1.5/=lib/seaport-1.5/\",\":seaport-core/=lib/seaport-core/src/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-core/lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport-1.5/lib/solarray/src/\",\":solmate/=lib/solmate/\",\":trustlessPermit/=lib/trustlessPermit/\",\":tstorish/=lib/tstorish/\",\":v2-core/=lib/v2-core/\",\":v2-periphery/=lib/v2-periphery/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"lib/permit2-relay/lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/permit2-relay/lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"lib/permit2-relay/src/EIP712.sol\":{\"keccak256\":\"0x40fe02ab7a8d0598b631c7c19b5bc9747ef7fc7ec2206e0bfc291c515ae1b6a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2033433c0811cec0859710da0b97d4bc3e9262d33ee8d875f8a76fca9fbe3d4\",\"dweb:/ipfs/QmeKuB2CzvzFtKsqAWpEed6MdUZ8seaoY9a5bWBprwg8s7\"]},\"lib/permit2-relay/src/PermitErrors.sol\":{\"keccak256\":\"0xe255796f67b102e3a8f27764b4cc4332621890582b776f44b9bbe329f22a7e1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee6e3e78e5e913ba5f11248a3569da9ba64fd0daba44daae4c4ddfb8792a82f5\",\"dweb:/ipfs/QmdWM5gwGjvdkxGAGMEsmZxegwKJdkD2DbtKYT4mnvbrX7\"]},\"lib/permit2-relay/src/SignatureTransfer.sol\":{\"keccak256\":\"0x625166cf76b5b91ac5651f010f89fc04c09355ece576c5b048bd01a53f58e732\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df33c4cb730dd309c4b4e2533aaaeeb01196a71711aa3a6e6c11e466220963e4\",\"dweb:/ipfs/QmejYX3Uszz2Rn4Dq82CUsbwwm1dFVrxPvW9kC5uHgpQhp\"]},\"lib/permit2-relay/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"lib/permit2-relay/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2-relay/src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c\",\"dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk\"]},\"lib/permit2-relay/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/permit2-relay/src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"lib/permit2-relay/src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"}],"type":"error","name":"InvalidAmount"},{"inputs":[],"type":"error","name":"InvalidContractSignature"},{"inputs":[],"type":"error","name":"InvalidNonce"},{"inputs":[],"type":"error","name":"InvalidSignature"},{"inputs":[],"type":"error","name":"InvalidSignatureLength"},{"inputs":[],"type":"error","name":"InvalidSigner"},{"inputs":[],"type":"error","name":"LengthMismatch"},{"inputs":[{"internalType":"uint256","name":"signatureDeadline","type":"uint256"}],"type":"error","name":"SignatureExpired"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"word","type":"uint256","indexed":false},{"internalType":"uint256","name":"mask","type":"uint256","indexed":false}],"type":"event","name":"UnorderedNonceInvalidation","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"wordPos","type":"uint256"},{"internalType":"uint256","name":"mask","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"invalidateUnorderedNonces"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"nonceBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitWitnessTransferFrom"},{"inputs":[{"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple","components":[{"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]},{"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]","components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}]},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permitWitnessTransferFrom"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Uses cached version if chainid and address are unchanged from construction."},"invalidateUnorderedNonces(uint256,uint256)":{"details":"The wordPos is maxed at type(uint248).max","params":{"mask":"A bitmap masked against msg.sender's current bitmap at the word position","wordPos":"A number to index the nonceBitmap at"}},"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":{"details":"Reverts if the requested amount is greater than the permitted signed amount","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"The spender's requested transfer details for the permitted token"}},"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":{"params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"Specifies the recipient and requested amount for the token transfer"}},"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":{"details":"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"The spender's requested transfer details for the permitted token","witness":"Extra data to include when checking the user signature","witnessTypeString":"The EIP-712 type definition for remaining string stub of the typehash"}},"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":{"details":"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition","params":{"owner":"The owner of the tokens to transfer","permit":"The permit data signed over by the owner","signature":"The signature to verify","transferDetails":"Specifies the recipient and requested amount for the token transfer","witness":"Extra data to include when checking the user signature","witnessTypeString":"The EIP-712 type definition for remaining string stub of the typehash"}}},"version":1},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"Returns the domain separator for the current chain."},"invalidateUnorderedNonces(uint256,uint256)":{"notice":"Invalidates the bits specified in mask for the bitmap at the word position"},"nonceBitmap(address,uint256)":{"notice":"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"},"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":{"notice":"Transfers a token using a signed permit message"},"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":{"notice":"Transfers multiple tokens using a signed permit message"},"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":{"notice":"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"},"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":{"notice":"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"}},"version":1}},"settings":{"remappings":["0x-settler/=lib/0x-settler/","@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","Multicaller/=lib/Multicaller/src/","ds-test/=lib/seaport-1.5/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","multicaller/=lib/Multicaller/","murky/=lib/seaport-1.5/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2-relay/=lib/permit2-relay/","permit2/=lib/0x-settler/lib/permit2/","seaport-1.5/=lib/seaport-1.5/","seaport-core/=lib/seaport-core/src/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-core/lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/solady/","solarray/=lib/seaport-1.5/lib/solarray/src/","solmate/=lib/solmate/","trustlessPermit/=lib/trustlessPermit/","tstorish/=lib/tstorish/","v2-core/=lib/v2-core/","v2-periphery/=lib/v2-periphery/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/permit2-relay/src/SignatureTransfer.sol":"SignatureTransfer"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/permit2-relay/lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"],"license":"AGPL-3.0-only"},"lib/permit2-relay/lib/solmate/src/utils/SafeTransferLib.sol":{"keccak256":"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a","urls":["bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4","dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"],"license":"AGPL-3.0-only"},"lib/permit2-relay/src/EIP712.sol":{"keccak256":"0x40fe02ab7a8d0598b631c7c19b5bc9747ef7fc7ec2206e0bfc291c515ae1b6a8","urls":["bzz-raw://f2033433c0811cec0859710da0b97d4bc3e9262d33ee8d875f8a76fca9fbe3d4","dweb:/ipfs/QmeKuB2CzvzFtKsqAWpEed6MdUZ8seaoY9a5bWBprwg8s7"],"license":"MIT"},"lib/permit2-relay/src/PermitErrors.sol":{"keccak256":"0xe255796f67b102e3a8f27764b4cc4332621890582b776f44b9bbe329f22a7e1b","urls":["bzz-raw://ee6e3e78e5e913ba5f11248a3569da9ba64fd0daba44daae4c4ddfb8792a82f5","dweb:/ipfs/QmdWM5gwGjvdkxGAGMEsmZxegwKJdkD2DbtKYT4mnvbrX7"],"license":"MIT"},"lib/permit2-relay/src/SignatureTransfer.sol":{"keccak256":"0x625166cf76b5b91ac5651f010f89fc04c09355ece576c5b048bd01a53f58e732","urls":["bzz-raw://df33c4cb730dd309c4b4e2533aaaeeb01196a71711aa3a6e6c11e466220963e4","dweb:/ipfs/QmejYX3Uszz2Rn4Dq82CUsbwwm1dFVrxPvW9kC5uHgpQhp"],"license":"MIT"},"lib/permit2-relay/src/interfaces/IAllowanceTransfer.sol":{"keccak256":"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29","urls":["bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0","dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN"],"license":"MIT"},"lib/permit2-relay/src/interfaces/IEIP712.sol":{"keccak256":"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138","urls":["bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72","dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"],"license":"MIT"},"lib/permit2-relay/src/interfaces/IERC1271.sol":{"keccak256":"0x0a546b8535127fb4a49d36d5f306fd5a8bbe6125a1852f935b9bb85a04c1acef","urls":["bzz-raw://4b99651e2df98e283a97c46d8d1ac4eff0d6a3618e25f7f85294472a670b541c","dweb:/ipfs/QmYRy5G8fXE8BfmyvGEbESEYZPPg3zJEFxHzR5GJZEMMTk"],"license":"MIT"},"lib/permit2-relay/src/interfaces/ISignatureTransfer.sol":{"keccak256":"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e","urls":["bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317","dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"],"license":"MIT"},"lib/permit2-relay/src/libraries/PermitHash.sol":{"keccak256":"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478","urls":["bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5","dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz"],"license":"MIT"},"lib/permit2-relay/src/libraries/SignatureVerification.sol":{"keccak256":"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30","urls":["bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab","dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i"],"license":"MIT"}},"version":1},"id":37}