{"abi":[{"type":"function","name":"exec","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address payable"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"payable"},{"type":"function","name":"transferFrom","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"exec(address,address,uint256,address,bytes)":"2213bc0b","transferFrom(address,address,address,uint256)":"15dacbea"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"exec\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exec(address,address,uint256,address,bytes)\":{\"details\":\"Neither `exec` nor `transferFrom` check that `token` contains code.msg.sender is forwarded to target appended to the msg data (similar to ERC-2771)\",\"params\":{\"amount\":\"The quantity of `token` the caller has authorised to be consumed\",\"data\":\"The data to forward to `target`\",\"operator\":\"An address which is allowed to consume the token permits\",\"target\":\"A contract to execute operations with `data`\",\"token\":\"The ERC20 token the caller has authorised to be consumed\"},\"returns\":{\"result\":\"The returndata from calling `target` with `data`\"}},\"transferFrom(address,address,address,uint256)\":{\"details\":\"*DOES NOT* check that `token` contains code. This function vacuously succeeds if      `token` is empty.can only be called by the `operator` previously registered in `exec`\",\"params\":{\"amount\":\"The quantity of `token` to transfer`\",\"owner\":\"The owner of tokens to transfer\",\"recipient\":\"The destination/beneficiary of the ERC20 `transferFrom`\",\"token\":\"The ERC20 token to transfer\"},\"returns\":{\"_0\":\"true\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exec(address,address,uint256,address,bytes)\":{\"notice\":\"Executes against `target` with the `data` payload. Prior to execution, token permits         are temporarily stored for the duration of the transaction. These permits can be         consumed by the `operator` during the execution`operator` consumes the funds during its operations by calling back into         `AllowanceHolder` with `transferFrom`, consuming a token permit.If calling `target` with `data` reverts, the revert is propagated\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"The counterpart to `exec` which allows for the consumption of token permits later         during execution\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0x-settler/src/allowanceholder/IAllowanceHolder.sol\":\"IAllowanceHolder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0x-settler/=lib/0x-settler/\",\":@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":Multicaller/=lib/Multicaller/src/\",\":ds-test/=lib/seaport-1.5/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":multicaller/=lib/Multicaller/\",\":murky/=lib/seaport-1.5/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2-relay/=lib/permit2-relay/\",\":permit2/=lib/0x-settler/lib/permit2/\",\":seaport-1.5/=lib/seaport-1.5/\",\":seaport-core/=lib/seaport-core/src/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-core/lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport-1.5/lib/solarray/src/\",\":solmate/=lib/solmate/\",\":trustlessPermit/=lib/trustlessPermit/\",\":tstorish/=lib/tstorish/\",\":v2-core/=lib/v2-core/\",\":v2-periphery/=lib/v2-periphery/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"lib/0x-settler/src/allowanceholder/IAllowanceHolder.sol\":{\"keccak256\":\"0xdae150dd71bd53fd27e843521db95f3ada566d5bdd2fbcba4fe92c37683ea350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e1903df15d1bd8e4fa77ae1bbb865a6a10180609dd5d49901d550b8b07b0617\",\"dweb:/ipfs/QmQ3XAgcGoDXiDCwLBVffAmFNJbhebTzL1qrNuHSkaPCE9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"exec","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"exec(address,address,uint256,address,bytes)":{"details":"Neither `exec` nor `transferFrom` check that `token` contains code.msg.sender is forwarded to target appended to the msg data (similar to ERC-2771)","params":{"amount":"The quantity of `token` the caller has authorised to be consumed","data":"The data to forward to `target`","operator":"An address which is allowed to consume the token permits","target":"A contract to execute operations with `data`","token":"The ERC20 token the caller has authorised to be consumed"},"returns":{"result":"The returndata from calling `target` with `data`"}},"transferFrom(address,address,address,uint256)":{"details":"*DOES NOT* check that `token` contains code. This function vacuously succeeds if      `token` is empty.can only be called by the `operator` previously registered in `exec`","params":{"amount":"The quantity of `token` to transfer`","owner":"The owner of tokens to transfer","recipient":"The destination/beneficiary of the ERC20 `transferFrom`","token":"The ERC20 token to transfer"},"returns":{"_0":"true"}}},"version":1},"userdoc":{"kind":"user","methods":{"exec(address,address,uint256,address,bytes)":{"notice":"Executes against `target` with the `data` payload. Prior to execution, token permits         are temporarily stored for the duration of the transaction. These permits can be         consumed by the `operator` during the execution`operator` consumes the funds during its operations by calling back into         `AllowanceHolder` with `transferFrom`, consuming a token permit.If calling `target` with `data` reverts, the revert is propagated"},"transferFrom(address,address,address,uint256)":{"notice":"The counterpart to `exec` which allows for the consumption of token permits later         during execution"}},"version":1}},"settings":{"remappings":["0x-settler/=lib/0x-settler/","@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","Multicaller/=lib/Multicaller/src/","ds-test/=lib/seaport-1.5/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","multicaller/=lib/Multicaller/","murky/=lib/seaport-1.5/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2-relay/=lib/permit2-relay/","permit2/=lib/0x-settler/lib/permit2/","seaport-1.5/=lib/seaport-1.5/","seaport-core/=lib/seaport-core/src/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-core/lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/solady/","solarray/=lib/seaport-1.5/lib/solarray/src/","solmate/=lib/solmate/","trustlessPermit/=lib/trustlessPermit/","tstorish/=lib/tstorish/","v2-core/=lib/v2-core/","v2-periphery/=lib/v2-periphery/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/0x-settler/src/allowanceholder/IAllowanceHolder.sol":"IAllowanceHolder"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/0x-settler/src/allowanceholder/IAllowanceHolder.sol":{"keccak256":"0xdae150dd71bd53fd27e843521db95f3ada566d5bdd2fbcba4fe92c37683ea350","urls":["bzz-raw://2e1903df15d1bd8e4fa77ae1bbb865a6a10180609dd5d49901d550b8b07b0617","dweb:/ipfs/QmQ3XAgcGoDXiDCwLBVffAmFNJbhebTzL1qrNuHSkaPCE9"],"license":"MIT"}},"version":1},"id":0}