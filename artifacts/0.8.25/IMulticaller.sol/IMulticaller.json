{"abi":[{"type":"function","name":"aggregate","inputs":[{"name":"targets","type":"address[]","internalType":"address[]"},{"name":"data","type":"bytes[]","internalType":"bytes[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"},{"name":"refundTo","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"aggregate(address[],bytes[],uint256[],address)":"991f255f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"refundTo\",\"type\":\"address\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregate(address[],bytes[],uint256[],address)\":{\"details\":\"Aggregates multiple calls in a single transaction.\",\"params\":{\"data\":\"An array of calldata to forward to the targets.\",\"refundTo\":\"The address to transfer any remaining ETH in the contract after the calls.                 If `address(0)`, remaining ETH will NOT be refunded.                 If `address(1)`, remaining ETH will be refunded to `msg.sender`.                 If anything else, remaining ETH will be refunded to `refundTo`.\",\"targets\":\"An array of addresses to call.\",\"values\":\"How much ETH to forward to each target.\"},\"returns\":{\"_0\":\"An array of the returndata from each call.\"}}},\"title\":\"IMulticaller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Multicaller contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/v1/interfaces/IMulticaller.sol\":\"IMulticaller\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0x-settler/=lib/0x-settler/\",\":@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":Multicaller/=lib/Multicaller/src/\",\":ds-test/=lib/seaport-1.5/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":multicaller/=lib/Multicaller/\",\":murky/=lib/seaport-1.5/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2-relay/=lib/permit2-relay/\",\":permit2/=lib/0x-settler/lib/permit2/\",\":seaport-1.5/=lib/seaport-1.5/\",\":seaport-core/=lib/seaport-core/src/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-core/lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/solady/\",\":solarray/=lib/seaport-1.5/lib/solarray/src/\",\":solmate/=lib/solmate/\",\":trustlessPermit/=lib/trustlessPermit/\",\":tstorish/=lib/tstorish/\",\":v2-core/=lib/v2-core/\",\":v2-periphery/=lib/v2-periphery/\",\":v3-core/=lib/v3-core/\"],\"viaIR\":true},\"sources\":{\"src/v1/interfaces/IMulticaller.sol\":{\"keccak256\":\"0x78526b9473f55611c213f6ccdacce653518edfcca1cfaa70e88f52b5f95836c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4ffa7f95269e5ea16a6d0df9bbedbad0495555ab92dbdbc6a4adc97b194e170\",\"dweb:/ipfs/QmPJ2EKBJfCZ5VpmtEtkmTW6gHVwFPj3u5LiVPWBZiMxC6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"address","name":"refundTo","type":"address"}],"stateMutability":"payable","type":"function","name":"aggregate","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]}],"devdoc":{"kind":"dev","methods":{"aggregate(address[],bytes[],uint256[],address)":{"details":"Aggregates multiple calls in a single transaction.","params":{"data":"An array of calldata to forward to the targets.","refundTo":"The address to transfer any remaining ETH in the contract after the calls.                 If `address(0)`, remaining ETH will NOT be refunded.                 If `address(1)`, remaining ETH will be refunded to `msg.sender`.                 If anything else, remaining ETH will be refunded to `refundTo`.","targets":"An array of addresses to call.","values":"How much ETH to forward to each target."},"returns":{"_0":"An array of the returndata from each call."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["0x-settler/=lib/0x-settler/","@matterlabs/zksync-contracts/=/lib/v2-testnet-contracts/","@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-1.5/lib/solmate/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","Multicaller/=lib/Multicaller/src/","ds-test/=lib/seaport-1.5/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/0x-settler/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","multicaller/=lib/Multicaller/","murky/=lib/seaport-1.5/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2-relay/=lib/permit2-relay/","permit2/=lib/0x-settler/lib/permit2/","seaport-1.5/=lib/seaport-1.5/","seaport-core/=lib/seaport-core/src/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-core/lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/solady/","solarray/=lib/seaport-1.5/lib/solarray/src/","solmate/=lib/solmate/","trustlessPermit/=lib/trustlessPermit/","tstorish/=lib/tstorish/","v2-core/=lib/v2-core/","v2-periphery/=lib/v2-periphery/","v3-core/=lib/v3-core/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/v1/interfaces/IMulticaller.sol":"IMulticaller"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/v1/interfaces/IMulticaller.sol":{"keccak256":"0x78526b9473f55611c213f6ccdacce653518edfcca1cfaa70e88f52b5f95836c0","urls":["bzz-raw://c4ffa7f95269e5ea16a6d0df9bbedbad0495555ab92dbdbc6a4adc97b194e170","dweb:/ipfs/QmPJ2EKBJfCZ5VpmtEtkmTW6gHVwFPj3u5LiVPWBZiMxC6"],"license":"MIT"}},"version":1},"id":64}