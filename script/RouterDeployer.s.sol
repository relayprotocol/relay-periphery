// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.23;

import {Script, console} from "forge-std/Script.sol";
import {console2} from "forge-std/console2.sol";
import {Test} from "forge-std/Test.sol";
import {BaseDeployer} from "./BaseDeployer.s.sol";
import {ICreate2Factory} from "../src/v2/interfaces/ICreate2Factory.sol";

contract RouterDeployer is Script, Test, BaseDeployer {
    error InvalidContractAddress(address expected, address actual);

    bytes32 constant salt = bytes32(uint256(1));

    function setUp() public {}

    function run() public {
        deployRouterAndSweepFunds(0xA1BEa5fe917450041748Dbbbe7E9AC57A4bBEBaB);
    }

    function deployRouterAndSweepFunds(
        address expectedAddress
    ) public {
        console2.log("Deploying Multicaller...");

        vm.startBroadcast(owner);
        address deployedAddress = ICreate2Factory(IMMUTABLE_CREATE2_FACTORY)
            .safeCreate2(
                VECTORIZED_MULTICALLER_SALT,
                hex"60808060405234610016576102b9908161001c8239f35b600080fdfe60806040526004361015610015575b366101fd57005b6000803560e01c63991f255f1461002c575061000e565b60803660031901126100aa5767ffffffffffffffff6004358181116100b5576100599036906004016100b9565b916024358181116100b1576100729036906004016100b9565b916044359081116100ad5761008b9036906004016100b9565b6064359690959194906001600160a01b03881688036100aa57506100ef565b80fd5b8580fd5b8480fd5b8280fd5b9181601f840112156100ea5782359167ffffffffffffffff83116100ea576020808501948460051b0101116100ea57565b600080fd5b959390949295606093871487871416156101f0578693604097610166575b505050505080610125575b5060206000526020526000f35b47156101185733811860018214021860003881804785620186a0f1610118576000526073600b5360ff6020536016600b47f0156101625738610118565b3838fd5b8794919395979160051b9384878737848601945b835188019087810182359081602080950182376000808093838a8c603f19918291010135908c8b0101355af1156101e7578287523d90523d908583013e603f601f19913d010116930196898689146101d45750969261017a565b975050505091505001923880808061010d565b503d81803e3d90fd5b633b800a463d526004601cfd5b3d356366e0daa08160e01c14610211573d3dfd5b193d5260043d815b36811061023a57600080808581305af43d82803e15610236573d90f35b3d90fd5b8035821a92600180920193801561025757815301905b9091610219565b503d19815283820193607f90353d1a81811115610278575b16010190610250565b83810138843961026f56fea26469706673582212200dfa3a85cbd068a99fd4d5051615c4bde5995f9e1dd4a095bb55fc5af681c44064736f6c63430008120033"
            );

        if (deployedAddress != MULTICALLER) {
            revert InvalidContractAddress(MULTICALLER, deployedAddress);
        }

        console2.log("Deploying Router to 0xA1BEa5fe917450041748Dbbbe7E9AC57A4bBEBaB...");

        // 0xA1BEa5fe917450041748Dbbbe7E9AC57A4bBEBaB
        (bool success, bytes memory data) = FOUNDRY_CREATE2_FACTORY.call(
            hex"0000000000000000000000000000000000000000177317f7617d575e615800c0610160604052346100a75761181a6060813803918261001d816100bf565b9384928339810103126100a75780610037610056926100e9565b906100506040610049602084016100e9565b92016100e9565b916100fd565b6040516115f0908161022a823960805181610909015260a051816108d7015260c0518161142f015260e05181610f14015261010051816114b101526101205181610d7c0152610140518161136f0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b038111838210176100e457604052565b6100ab565b51906001600160a01b03821682036100a757565b9190696002601e613d5c3d52f35f52600a60165ff0926001600160a01b03908185161561019c5784610131610185966101e7565b801561018757600160c052600360e0526005610100525b60a0526080526101777fde8722880b5dd233e72245d89ecf1926d842675ee7337f75a172abc8abc5ba88600155565b1661012052610140526101ae565b565b600260c052600460e052600661010052610148565b604051632aea588760e01b8152600490fd5b6001600160a01b0316638b78c6d8198190555f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a3565b5f80808093600a5a04fa3d15610226573d6001600160401b0381116100e457610219601f8201601f19166020016100bf565b9081525f60203d92013e90565b9056fe6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c8063150b7a021461012957806325692962146101245780633806a3cf1461011f5780633ccfd60b1461011a5780633dad0c9c1461011557806354d1f13d1461011057806366b9ca7b1461010b5780636e305f8014610106578063715018a6146101015780637423eb3c146100fc5780638da5cb5b146100f7578063bc197c81146100f2578063c99a0d65146100ed578063f04e283e146100e8578063f23a6e61146100e3578063f2fde38b146100de5763fee81cf40361000e57610be8565b610ba9565b610ae4565b610a93565b610a59565b6109b2565b610986565b6108be565b61087a565b6107c4565b610707565b61055e565b6104b8565b61047c565b61044d565b610278565b61018c565b6001600160a01b0381160361013f57565b5f80fd5b600435906101508261012e565b565b60a435906101508261012e565b9181601f8401121561013f578235916001600160401b03831161013f576020838186019501011161013f57565b3461013f57608036600319011261013f576101a860043561012e565b6101b360243561012e565b6064356001600160401b03811161013f576101d290369060040161015f565b906101db610f0f565b906001600160a01b0382161561025c57333b1561013f575f916102176040519485938493635c46a7ef60e11b8552604435903060048701610c3e565b038183335af180156102575761023e575b604051630a85bd0160e11b8152602090f35b0390f35b8061024b610251926102d5565b8061026e565b5f610228565b610c6f565b60405163f36675c360e01b8152600490fd5b5f91031261013f57565b5f36600319011261013f5763389a75e1600c52335f526202a30042016020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d5f80a2005b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116102e857604052565b6102c1565b606081019081106001600160401b038211176102e857604052565b604081019081106001600160401b038211176102e857604052565b608081019081106001600160401b038211176102e857604052565b90601f801991011681019081106001600160401b038211176102e857604052565b6040519061015082610308565b6001600160401b0381116102e857601f01601f191660200190565b6040519060a082018281106001600160401b038211176102e8576040526064825263756e742960e01b6080837f52656c617965725769746e657373207769746e6573732952656c61796572576960208201527f746e65737328616464726573732072656c6179657229546f6b656e5065726d6960408201527f7373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f60608201520152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b3461013f575f36600319011261013f5761023a610468610387565b604051918291602083526020830190610429565b3461013f575f36600319011261013f57610494610f67565b5f8080804733620186a0f1156104a657005b604051633d2cec6f60e21b8152600490fd5b3461013f57604036600319011261013f576004356104d58161012e565b602435906104e28261012e565b6040516370a0823160e01b81523060048201526001600160a01b039190911691602082602481865afa918215610257575f9261052a575b508161052157005b61001892610f83565b9091506020813d602011610556575b816105466020938361033e565b8101031261013f5751905f610519565b3d9150610539565b5f36600319011261013f5763389a75e1600c52335f525f6020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c925f80a2005b6001600160401b0381116102e85760051b60200190565b909160608284031261013f5760408051906105d3826102ed565b819380356001600160401b03811161013f57810186601f8201121561013f578035602091610600826105a2565b9161060d8651938461033e565b808352838084019160061b830101918a831161013f578401905b8282106106465750505084528181013590840152810135910152909150565b86828c031261013f57848791825161065d81610308565b84356106688161012e565b81528285013583820152815201910190610627565b9181601f8401121561013f578235916001600160401b03831161013f576020808501948460051b01011161013f57565b81601f8201121561013f578035906106c48261036c565b926106d2604051948561033e565b8284526020838301011161013f57815f926020809301838601378301015290565b906020610704928181520190610429565b90565b60e036600319011261013f5761071b610143565b6001600160401b0360243581811161013f5761073b9036906004016105b9565b9160443582811161013f5761075490369060040161067d565b60643584811161013f5761076c90369060040161067d565b60849291923586811161013f5761078790369060040161067d565b939092610792610152565b9560c43598891161013f5761023a996107b26107b89a36906004016106ad565b98610c7a565b604051918291826106f3565b608036600319011261013f576001600160401b0360043581811161013f576107f090369060040161067d565b9160243581811161013f5761080990369060040161067d565b909160443590811161013f5761082390369060040161067d565b91606435936108318561012e565b818714801590610870575b61085e5761023a96610856966108518761140d565b61132b565b6107b8611496565b604051631dc0052360e11b8152600490fd5b508382141561083c565b5f36600319011261013f5761088d610f67565b5f638b78c6d8198181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a355005b3461013f575f36600319011261013f57323303610974577f00000000000000000000000000000000000000000000000000000000000000008015610969575b6109575761093161092d7f000000000000000000000000000000000000000000000000000000000000000061152d565b1590565b61094557610018600160ff195f5416175f55565b6040516370a4078f60e01b8152600490fd5b604051630f45b98b60e41b8152600490fd5b505f5460ff166108fd565b60405163096650c560e21b8152600490fd5b3461013f575f36600319011261013f57638b78c6d819546040516001600160a01b039091168152602090f35b3461013f5760a036600319011261013f576109ce60043561012e565b6109d960243561012e565b6001600160401b0360443581811161013f576109f990369060040161067d565b60649291923582811161013f57610a1490369060040161067d565b60849491943593841161013f5761023a94610a36610a3e95369060040161015f565b949093610e2b565b6040516001600160e01b031990911681529081906020820190565b3461013f575f36600319011261013f5760206040517f4910260415865c6d3ecf96968c7d912a0d533a72c3479ab1e1df0f4eb86fb0088152f35b602036600319011261013f57600435610aab8161012e565b610ab3610f67565b63389a75e1600c52805f526020600c209081544211610ad7575f61001892556114f5565b636f5e88185f526004601cfd5b3461013f5760a036600319011261013f57610b0060043561012e565b610b0b60243561012e565b6084356001600160401b03811161013f57610b2a90369060040161015f565b90610b33610f0f565b906001600160a01b0382161561025c57333b1561013f575f91610b736040519485938493637921219560e11b855260643590604435903060048801610edc565b038183335af1801561025757610b96575b60405163f23a6e6160e01b8152602090f35b8061024b610ba3926102d5565b5f610b84565b602036600319011261013f57600435610bc18161012e565b610bc9610f67565b8060601b15610bdb57610018906114f5565b637448fbae5f526004601cfd5b3461013f57602036600319011261013f57600435610c058161012e565b63389a75e1600c525f52602080600c2054604051908152f35b908060209392818452848401375f828201840152601f01601f1916010190565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261070493910191610c1e565b6040513d5f823e3d90fd5b90999899858414801590610dfd575b61085e578a51610ca1575b505061070497985061132b565b96929793604099969295919951986020996020810190610d0881610cfa3385919091602060408201937f4910260415865c6d3ecf96968c7d912a0d533a72c3479ab1e1df0f4eb86fb008835260018060a01b0316910152565b03601f19810183528261033e565b51902096610d178a5151611033565b9c5f5b8b518051821015610d6457908f818f9182610d5d93610d3b846001986110a5565b510151610d4661035f565b30815291820152610d5783836110a5565b526110a5565b5001610d1a565b505093979b92969a5093979b90949860018060a01b037f00000000000000000000000000000000000000000000000000000000000000001693610da5610387565b853b1561013f5760405163fe8ec1a760e01b81529d8e958695610dcb9560048801611110565b03815a5f948591f19788156102575761070498610dea575b8998610c94565b8061024b610df7926102d5565b5f610de3565b5087861415610c89565b81835290916001600160fb1b03831161013f5760209260051b809284830137010190565b94909290916001600160a01b03610e40610f0f565b1692831561025c57333b1561013f575f95610e9d610eac94610e896040519a8b998a99631759616b60e11b8b523060048c015260248b015260a060448b015260a48a0191610e07565b9060031995868984030160648a0152610e07565b92858403016084860152610c1e565b038183335af1801561025757610ec9575b5063bc197c8160e01b90565b8061024b610ed6926102d5565b5f610ebd565b919261070496949160a094600180871b038092168552166020840152604083015260608201528160808201520191610c1e565b6001547f000000000000000000000000000000000000000000000000000000000000000080600414610f50576003036115a6575c5b6001600160a01b031690565b505f5460ff1615610f61575c610f44565b54610f44565b638b78c6d819543303610f7657565b6382b429005f526004601cfd5b915f8091610fd69360405195602087019263a9059cbb60e01b845260018060a01b038093166024890152604488015260448752610fbf87610323565b1694519082865af1610fcf6112fc565b9083611543565b805190811515918261100f575b5050610fec5750565b604051635274afe760e01b81526001600160a01b03919091166004820152602490fd5b819250906020918101031261013f576020015180159081150361013f575f80610fe3565b9061103d826105a2565b60409061104d604051918261033e565b838152809361105e601f19916105a2565b01915f5b83811061106f5750505050565b602090825161107d81610308565b5f8152825f81830152828601015201611062565b634e487b7160e01b5f52603260045260245ffd5b80518210156110b95760209160051b010190565b611091565b9081518082526020808093019301915f5b8281106110dd575050505090565b909192938260408261110460019489516020809160018060a01b0381511684520151910152565b019501939291016110cf565b9491969593909660c086526101208601978051606060c08901528051809a526101408801996020809201915f5b8281106111ae575050505061117c61070498996111a096959493604084602061118e96015160e08d015201516101008b015289820360208b01526110be565b6001600160a01b039094166040880152565b60608601528482036080860152610429565b9160a0818403910152610429565b835180516001600160a01b03168e52602090810151908e01526040909c019b9281019260010161113d565b91908110156110b95760051b0190565b356107048161012e565b97969593909492918060808a0160808b525260a0890195905f5b8181106112cd575050506020888603818a015281865280860195818360051b82010196845f925b85841061126e57505050505050508260609261125b928861015097960360408a0152610e07565b6001600160a01b03909216940193909352565b90919293949598601f198282030184528935601e198436030181121561013f5783018681019190356001600160401b03811161013f57803603831361013f576112bc88928392600195610c1e565b9b0194019401929594939190611234565b909192939660019084356112e08161012e565b60a083901b83900316815260209081019895940192910161120d565b3d15611326573d9061130d8261036c565b9161131b604051938461033e565b82523d5f602084013e565b606090565b95929491949390935f5b8581106113a957505f9694919361136b93889795610cfa93604051978896602088019a63991f255f60e01b8c52602489016111f3565b51907f00000000000000000000000000000000000000000000000000000000000000005af46113986112fc565b90156113a15790565b602081519101fd5b737777777f279eba3d3ad8f4e708545291a6fdba8b6113d4610f446113cf848a8d6111d9565b6111e9565b146113e157600101611335565b60405163d08525e960e01b8152737777777f279eba3d3ad8f4e708545291a6fdba8b6004820152602490fd5b6001600160a01b03168015801561148c575b61148957308114611471576001547f000000000000000000000000000000000000000000000000000000000000000080600214611460576001036115a6575d565b505f5460ff161561146e575d565b55565b604051630bc2c5df60e11b8152306004820152602490fd5b50565b506001811461141f565b6001600160a01b036114a6610f0f565b1615610150576001547f0000000000000000000000000000000000000000000000000000000000000000806006146114e4576005036115a6575f905d565b505f9060ff825416821461146e575d565b60018060a01b0316638b78c6d8198181547f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a355565b5f80808093600a5a04fa61153f6112fc565b5090565b9061156a575080511561155857805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061159d575b61157b575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611573565b634e487b7160e01b5f52605160045260245ffdfea26469706673582212207bf9c133090554a1de9ee1cebedde6e2e7868181fbec31459ba2521f5a235e4764736f6c63430008190033000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba30000000000000000000000000000000000002bdbf1bf3279983603ec279cc6df000000000000000000000000f70da97812cb96acdf810712aa562db8dfa3dbef"
        );

        if (!success || address(bytes20(data)) != expectedAddress) {
            revert InvalidContractAddress(
                expectedAddress,
                address(bytes20(data))
            );
        }

        console2.log("Router deployed: ", expectedAddress);

        // Sweep funds
        address[] memory targets = new address[](1);
        targets[0] = SOLVER;

        bytes[] memory datas = new bytes[](1);
        datas[0] = "";

        uint256[] memory values = new uint256[](1);
        values[0] = expectedAddress.balance;

        uint256 routerBalanceBefore = expectedAddress.balance;
        uint256 solverBalanceBefore = SOLVER.balance;
        console2.log("Router balance before: ", routerBalanceBefore);
        console2.log("Solver balance before: ", solverBalanceBefore);

        (success, ) = expectedAddress.call(
            abi.encodeWithSignature("delegatecallMulticall(address[],bytes[],uint256[],address)", targets, datas, values, owner)
        );
        if (!success) {
            revert();
        }
        vm.stopBroadcast();
        uint256 routerBalanceAfter = expectedAddress.balance;
        console2.log("Router balance after: ", routerBalanceAfter);
        console2.log("Solver balance after: ", SOLVER.balance);
        assertEq(SOLVER.balance - solverBalanceBefore, routerBalanceBefore);
    }
}